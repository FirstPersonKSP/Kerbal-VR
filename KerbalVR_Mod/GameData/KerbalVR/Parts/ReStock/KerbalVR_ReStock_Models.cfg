// convenience structures for replacing restock and NearFutureSpacecraft external hatches

KERBALVR_RESTOCK_MODELS
{
	REPLACE
	{
		name = CommonHatchOblongCurved
		model = KerbalVR/Parts/ReStock/CommonHatchOblongCurved
		texture:NEEDS[ReStock] = diff, ReStock/Assets/Command/restock-crewed-hatch-1
		texture:NEEDS[ReStock] = norm, ReStock/Assets/Command/restock-crewed-hatch-1-n
		texture:NEEDS[ReStock] = emit, ReStock/Assets/Command/restock-crewed-hatch-1-e

		texture:NEEDS[!ReStock] = diff, NearFutureSpaceCraft/Parts/Command/command-pods/restock-crewed-hatch-1
		texture:NEEDS[!ReStock] = norm, NearFutureSpaceCraft/Parts/Command/command-pods/restock-crewed-hatch-1-n
		texture:NEEDS[!ReStock] = emit, NearFutureSpaceCraft/Parts/Command/command-pods/restock-crewed-hatch-1-e
	}

	REPLACE
	{
		name = CommonHatchOblong
		model = KerbalVR/Parts/ReStock/CommonHatchOblong
		texture:NEEDS[ReStock] = diff, ReStock/Assets/Command/restock-crewed-hatch-1
		texture:NEEDS[ReStock] = norm, ReStock/Assets/Command/restock-crewed-hatch-1-n
		texture:NEEDS[ReStock] = emit, ReStock/Assets/Command/restock-crewed-hatch-1-e

		texture:NEEDS[!ReStock] = diff, NearFutureSpaceCraft/Parts/Command/command-pods/restock-crewed-hatch-1
		texture:NEEDS[!ReStock] = norm, NearFutureSpaceCraft/Parts/Command/command-pods/restock-crewed-hatch-1-n
		texture:NEEDS[!ReStock] = emit, NearFutureSpaceCraft/Parts/Command/command-pods/restock-crewed-hatch-1-e
	}
}

// ----- ReStock

// TODO:
// - convert restock-crewed-endcap-1 to VR form
// - handle KV pod handles

// NOTE: we use LAST here because SSPX also modifies a lot of these in FOR[zzzzStationParts]

@PART:HAS[@MODEL:HAS[#model[ReStock/Assets/Command/restock-cupola-1]]&!MODULE[VRExternalHatch]]:LAST[KerbalVR]
{
	MODULE
	{
		name = ExternalObjectReplacer

		#@KERBALVR_RESTOCK_MODELS/REPLACE[CommonHatchOblong] {}
		@REPLACE,-1
		{
			// note: despite the name here, this is NOT the curved version of the hatch
			targetTransformName = CommonHatchOblongCurved (1)
		}
	}
}

// note: mk1pod omitted, does not use a standardized hatch
// note: mk1-3pod omitted, does not use a standardized hatch (though we may want to move/customize the hatch lever)

@PART:HAS[@MODEL:HAS[#model[ReStock/Assets/Command/restock-mk1-lander]]&!MODULE[VRExternalHatch]]:LAST[KerbalVR]
{
	MODULE
	{
		name = ExternalObjectReplacer
		
		#@KERBALVR_RESTOCK_MODELS/REPLACE[CommonHatchOblong] {}
		@REPLACE,-1
		{
			targetTransformName = CommonHatchOblong
		}
	}
}

@PART:HAS[@MODEL:HAS[#model[ReStock/Assets/Command/restock-mk2-lander]]&!MODULE[VRExternalHatch]]:LAST[KerbalVR]
{
	// TODO: top hatch

	MODULE
	{
		name = ExternalObjectReplacer
	
		// Lander Mode
		#@KERBALVR_RESTOCK_MODELS/REPLACE[CommonHatchOblong] {}
		@REPLACE,-1
		{
			targetTransformName = CommonHatchOblong
		}

		// Rover Mode
		#@KERBALVR_RESTOCK_MODELS/REPLACE[CommonHatchOblong] {}
		@REPLACE,-1
		{
			targetTransformName = CommonHatchOblong001
		}
	}
}

// Large_Crewed_Lab
@PART:HAS[@MODEL:HAS[#model[ReStock/Assets/Command/restock-lab-1]]&!MODULE[VRExternalHatch]]:LAST[KerbalVR]
{
	MODULE
	{
		name = ExternalObjectReplacer

		#@KERBALVR_RESTOCK_MODELS/REPLACE[CommonHatchOblongCurved] {}
		@REPLACE,-1
		{
			targetTransformName = CommonHatchOblongCurved
		}

		#@KERBALVR_RESTOCK_MODELS/REPLACE[CommonHatchOblongCurved] {}
		@REPLACE,-1
		{
			targetTransformName = CommonHatchOblongCurved (1)
		}
	}
}

// crewCabin (hitchhiker pod)
@PART:HAS[@MODEL:HAS[#model[ReStock/Assets/Command/restock-hitchhiker-1]]&!MODULE[VRExternalHatch]]:LAST[KerbalVR]
{
	MODULE
	{
		name = ExternalObjectReplacer

		#@KERBALVR_RESTOCK_MODELS/REPLACE[CommonHatchOblongCurved] {}
		@REPLACE,-1
		{
			targetTransformName = CommonHatchOblongCurved
		}
	}
}

// ----- SSPX (here because it edits a lot of the same stock parts)

// SSPX patches several of the stock parts.  Some of these are similar - but not the same - as the restock versions!

// stock crewCabin (hitchhiker pod)
@PART:HAS[@MODEL:HAS[#model[StationPartsExpansionRedux/Parts/Rigid/station-25/sspx-hitchhiker-25-1]]&!MODULE[VRExternalHatch]]:LAST[KerbalVR]
{
	MODULE
	{
		name = ExternalObjectReplacer

		#@KERBALVR_RESTOCK_MODELS/REPLACE[CommonHatchOblongCurved] {}
		@REPLACE,-1
		{
			targetTransformName = CommonHatchOblongCurved
		}
	}
}

// stock cupola
@PART:HAS[@MODEL:HAS[#model[StationPartsExpansionRedux/Parts/Rigid/station-25/sspx-cupola-25-1]]&!MODULE[VRExternalHatch]]:LAST[KerbalVR]
{
	MODULE
	{
		name = ExternalObjectReplacer

		#@KERBALVR_RESTOCK_MODELS/REPLACE[CommonHatchOblong] {}
		@REPLACE,-1
		{
			targetTransformName = CommonHatchOblong
		}
	}
}

// stock Large_Crewed_Lab
@PART:HAS[@MODEL:HAS[#model[StationPartsExpansionRedux/Parts/Rigid/station-25/sspx-lab-25-1]]&!MODULE[VRExternalHatch]]:LAST[KerbalVR]
{
	MODULE
	{
		name = ExternalObjectReplacer

		#@KERBALVR_RESTOCK_MODELS/REPLACE[CommonHatchOblongCurved] {}
		@REPLACE,-1
		{
			targetTransformName = CommonHatchOblongCurved
		}

		#@KERBALVR_RESTOCK_MODELS/REPLACE[CommonHatchOblongCurved] {}
		@REPLACE,-1
		{
			targetTransformName = CommonHatchOblongCurved2
		}
	}
}

// ----- Actual patching mechanism

@PART:HAS[@MODULE[ExternalObjectReplacer]:HAS[@REPLACE[CommonHatchOblongCurved]]]:LAST[KerbalVR]
{
	MM_PATCH_LOOP {}

	MODULE
	{
		name = VRExternalHatch
		hatchTransformName = #$/MODULE[ExternalObjectReplacer]/REPLACE[CommonHatchOblongCurved]/targetTransformName$/handle
		maxRotation = 30
		rotationAxis = 0, 0, 1
	}

	@MODULE[ExternalObjectReplacer]:HAS[@REPLACE[CommonHatchOblongCurved]]
	{
		@REPLACE[CommonHatchOblongCurved]
		{
			-name = delete
		}
	}
}

@PART:HAS[@MODULE[ExternalObjectReplacer]:HAS[@REPLACE[CommonHatchOblong]]]:LAST[KerbalVR]
{
	MM_PATCH_LOOP {}

	MODULE
	{
		name = VRExternalHatch
		hatchTransformName = #$/MODULE[ExternalObjectReplacer]/REPLACE[CommonHatchOblong]/targetTransformName$/handle
		maxRotation = 30
		rotationAxis = 0, 0, 1
	}

	@MODULE[ExternalObjectReplacer]:HAS[@REPLACE[CommonHatchOblong]]
	{
		@REPLACE[CommonHatchOblong]
		{
			-name = delete
		}
	}
}